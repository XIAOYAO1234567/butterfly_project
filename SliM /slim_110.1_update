// SLiM 3.x • Wright–Fisher • NC_069110.1

initialize() {
    initializeSLiMModelType("WF");
    initializeSLiMOptions(keepPedigrees = T, nucleotideBased = T);

    initializeAncestralNucleotides(
        "SLiM_update/inputs/NC_069110.1/NC_069110.1.upper.fna");


    initializeMutationTypeNuc("m1", 0.5, "f", 0.00);   
    initializeMutationTypeNuc("m3", 10.0, "f", 0.01);  

    mm = mmJukesCantor(1e-7);                         

    initializeGenomicElementType("g1", m1, 1.0, mm);   
    initializeGenomicElementType("g3", m3, 1.0, mm);   


    initializeGenomicElement(g3, 17400001, 17420000);  // Balancing-1
    initializeGenomicElement(g3,  5920001,  5945000);  // Balancing-2
    initializeGenomicElement(g3, 21498242, 21498243);  // Rest (singleton)

    initializeRecombinationRate(1e-8);                 

    m1.convertToSubstitution = F;
    m3.convertToSubstitution = F;
}

1 early() {
    sim.addSubpop("p1", 5);

    p1.genomes.readFromVCF(
        filePath = "SLiM_update/inputs/NC_069110.1/NC_069110.1_MT3_balancing.cleaned.vcf",
        mutationType = m3 );

    p1.setSubpopulationSize(10000);
}

function (void) sampleAndSave(integer gen) {
    sim.subpopulations[0].outputVCFSample(
        5,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_${gen}_generations.vcf");
    p1.outputMSSample(
        10, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_${gen}_generations.ms");
}

100  late() { sampleAndSave(100); }
200  late() { sampleAndSave(200); }
300  late() { sampleAndSave(300); }
400  late() { sampleAndSave(400); }
500  late() { sampleAndSave(500); }
600  late() { sampleAndSave(600); }
700  late() { sampleAndSave(700); }
800  late() { sampleAndSave(800); }
900  late() { sampleAndSave(900); }
1000 late() { sampleAndSave(1000); }
1100 late() { sampleAndSave(1100); }
1200 late() { sampleAndSave(1200); }
1300 late() { sampleAndSave(1300); }
1400 late() { sampleAndSave(1400); }
1500 late() { sampleAndSave(1500); }
1600 late() { sampleAndSave(1600); }
1700 late() { sampleAndSave(1700); }
1800 late() { sampleAndSave(1800); }
1900 late() { sampleAndSave(1900); }
2000 late() {
    sampleAndSave(2000);
    sim.simulationFinished();
}
