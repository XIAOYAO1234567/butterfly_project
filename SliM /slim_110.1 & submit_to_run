initialize() {
    initializeSLiMModelType("WF");
    initializeSLiMOptions(keepPedigrees = T, nucleotideBased = T);

    initializeAncestralNucleotides(
        "SLiM_update/inputs/NC_069110.1/NC_069110.1.upper.fna");

    initializeMutationTypeNuc("m1", 0.5 , "f", 0.00);   
    initializeMutationTypeNuc("m3", 10.0, "f", 0.01);   

    mm = mmJukesCantor(1e-7);                          

    initializeGenomicElementType("g1", m1, 1.0, mm);  
    initializeGenomicElementType("g3", m3, 1.0, mm);   

    initializeGenomicElement(g3, 17400001, 17420000);   
    initializeGenomicElement(g3,  5920001,  5945000);   
    initializeGenomicElement(g3, 21498242, 21498243);   

    initializeRecombinationRate(1e-8);                  

    m1.convertToSubstitution = F;
    m3.convertToSubstitution = F;
}

1 early() {
    sim.addSubpop("p1", 5);

    p1.genomes.readFromVCF(
        filePath = "SLiM_update/inputs/NC_069110.1/NC_069110.1_MT3_balancing.cleaned.vcf",
        mutationType = m3 );

    p1.setSubpopulationSize(10000);
}

100  late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_100_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_100_generations.ms");
}
200 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_200_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_200_generations.ms");
}
300 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_300_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_300_generations.ms");
}
400 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_400_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_400_generations.ms");
}
500 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_500_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_500_generations.ms");
}
600 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_600_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_600_generations.ms");
}
700 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_700_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_700_generations.ms");
}
800 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_800_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_800_generations.ms");
}
900 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_900_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_900_generations.ms");
}
1000 late() {
    sim.subpopulations[0].outputVCFSample(100,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_1000_generations.vcf");
    p1.outputMSSample(200, replace = F,
        filePath = "SLiM_update/outputs/NC_069110.1/NC_069110.1_1000_generations.ms");
    sim.simulationFinished();
}



#!/bin/bash
#$ -N slim_sim
#$ -cwd
#$ -l h_vmem=12G
#$ -pe smp 1
#$ -l h_rt=8:00:00
#$ -j y

source ~/miniforge3/bin/activate slim_env  
slim simulate_NC_105.slim

