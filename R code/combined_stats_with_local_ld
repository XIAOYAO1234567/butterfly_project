library(ggplot2)
library(dplyr)
library(readr)
library(patchwork)

compute_genome_tajimaD_quantile <- function(df) {
  td_low  <- quantile(df$TajimaD, 0.05, na.rm = TRUE)
  td_high <- quantile(df$TajimaD, 0.95, na.rm = TRUE)
  cat("Genome-wide Tajima's D 5%:", round(td_low, 4), " 95%:", round(td_high, 4), "\n")
  list(td_low = td_low, td_high = td_high)
}

compute_genome_pi_quantile <- function(df) {
  pi_vals <- as.numeric(df$tP) / as.numeric(df$nSites)
  pi_low  <- quantile(pi_vals, 0.05, na.rm = TRUE)
  pi_high <- quantile(pi_vals, 0.95, na.rm = TRUE)
  cat("Genome-wide π 5%:", signif(pi_low, 4), " 95%:", signif(pi_high, 4), "\n")
  list(pi_low = pi_low, pi_high = pi_high)
}

pick_span <- function(width_bp) {
  if (is.na(width_bp)) return(0.2)
  if (width_bp <= 5e5) 0.3 else if (width_bp <= 1e6) 0.2 else 0.1
}

plot_combined_stats <- function(candidate_df, tajima_q, pi_q, region_name, window_size, output_pdf) {
  df <- candidate_df %>%
    mutate(
      TajimaD     = as.numeric(Tajima),
      tP          = as.numeric(tP),
      nSites      = as.numeric(nSites),
      tP_per_site = tP / nSites
    ) %>%
    filter(!is.na(TajimaD), !is.na(tP_per_site), nSites > 0)

  width_bp <- max(df$WinCenter, na.rm = TRUE) - min(df$WinCenter, na.rm = TRUE)
  span_val <- pick_span(width_bp)
  td_low   <- tajima_q$td_low
  td_high  <- tajima_q$td_high
  pi_low   <- pi_q$pi_low
  pi_high  <- pi_q$pi_high

  cat("Region:", region_name, "| Width(Mb):", round(width_bp/1e6, 3), "| Windows:", nrow(df), "\n")

  base_theme <- theme_classic(base_size = 10) +
    theme(
      plot.title    = element_text(face = "bold", size = 12, hjust = 0.5),
      plot.subtitle = element_text(size = 10, hjust = 0.5),
      axis.title    = element_text(face = "bold", size = 10),
      axis.text     = element_text(color = "black", size = 8),
      axis.line     = element_line(color = "black")
    )

  p_td <- ggplot(df, aes(x = WinCenter, y = TajimaD)) +
    geom_hline(yintercept = td_low,  linetype = "longdash", linewidth = 0.6, color = "#0072B2") +
    geom_hline(yintercept = td_high, linetype = "longdash", linewidth = 0.6, color = "#D55E00") +
    geom_point(size = 0.3, alpha = 0.7, color = "orange") +
    geom_smooth(method = "loess", span = span_val, color = "black", se = FALSE, linewidth = 0.6) +
    labs(
      title    = "Tajima's D",
      x        = "Genomic position (bp)",
      y        = "Tajima's D",
      subtitle = sprintf("Genome-wide 5%%: %.2f; 95%%: %.2f", td_low, td_high)
    ) +
    coord_cartesian(ylim = c(-2, max(df$TajimaD, na.rm = TRUE) * 1.2)) +
    base_theme

  p_pi <- ggplot(df, aes(x = WinCenter, y = tP_per_site)) +
    geom_point(size = 0.3, alpha = 0.7, color = "purple") +
    geom_smooth(method = "loess", span = span_val, color = "black", se = FALSE, linewidth = 0.8) +
    labs(
      title    = expression("Nucleotide Diversity (" * pi * ")"),
      x        = "Genomic position (bp)",
      y        = expression(pi ~ "(per site)"),
      subtitle = sprintf("Genome-wide 5%%: %.3g; 95%%: %.3g", pi_low, pi_high)
    ) +
    coord_cartesian(ylim = c(0, pi_high * 1.2)) +
    base_theme +
    theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5))

  combined <- p_td / p_pi +
    plot_annotation(
      title = sprintf("Tajima's D and %s — %s (Window = %s bp)", "\u03C0", region_name, window_size),
      theme = theme(plot.title = element_text(face = "bold", size = 14, hjust = 0.5))
    )

  ggsave(output_pdf, plot = combined, width = 8, height = 12, dpi = 300, device = cairo_pdf)
  cat("Saved:", output_pdf, "\n\n")
}

genome_df <- read_tsv(
  "/Users/oukaoruken/Desktop/angsd_output_10kb_100kb/theta.10kb.pestPG",
  skip = 1,
  col_names = c("Region","CHROM","WinCenter","tW","tP","tF","tH","tL","Tajima","fuf","fud","fayh","zeng","nSites")
) %>%
  mutate(TajimaD = as.numeric(Tajima)) %>%
  filter(!is.na(TajimaD), !is.na(tP), !is.na(nSites), nSites > 0)

tajima_q <- compute_genome_tajimaD_quantile(genome_df)
pi_q     <- compute_genome_pi_quantile(genome_df)
target_dir <- "/Users/oukaoruken/Desktop"
candidate_files <- list.files(
  target_dir,
  pattern = "_(100bp|500bp|1kb)\\.pestPG$",
  recursive = TRUE,
  full.names = TRUE
)

cat("Found", length(candidate_files), "candidate region files\n")

for (f in candidate_files) {
  region_name <- gsub(".*/theta_|_\\d+bp\\.pestPG", "", f)
  window_size <- as.numeric(sub(".*_(\\d+)bp\\.pestPG", "\\1", f))
  candidate_df <- read_tsv(
    f,
    skip = 1,
    col_names = c("Region","CHROM","WinCenter","tW","tP","tF","tH","tL","Tajima","fuf","fud","fayh","zeng","nSites")
  )
  out_pdf <- sprintf("combined_%s_%sbp.pdf", region_name, window_size)
  plot_combined_stats(candidate_df, tajima_q, pi_q, region_name, window_size, out_pdf)
}

cat("All combined plots completed\n")
